#include <iostream>
#include <vector>

using namespace std;

class FenwickTree {
private:
    vector<int> t; // Tree array
    int sz; // Size

public:
    FenwickTree(int n) : sz(n) {
        t.resize(n + 1, 0); // Initialize tree
    }

    void update(int i, int v) {
        while (i <= sz) {
            t[i] += v; // Add value
            i += i & -i; // Move to next index
        }
    }

    int sum(int i) {
        int total = 0;
        while (i > 0) {
            total += t[i]; // Add value at index
            i -= i & -i; // Move to parent index
        }
        return total;
    }
};

int main() {
    vector<int> w = {50, 20, 30, 10, 40}; // Weights
    int n = w.size(); // Size of weights

    FenwickTree ft(n); // Create tree

    for (int i = 0; i < n; i++) {
        ft.update(i + 1, w[i]); // Update tree
    }

    cout << "Total weight up to each index:\n";
    for (int i = 1; i <= n; i++) {
        cout << "Up to index " << i << ": " << ft.sum(i) << "kg\n";
    }

    cout << "\nUpdating second item by adding 10kg.\n";
    ft.update(2, 10); // Update second item

    cout << "Updated total weight:\n";
    for (int i = 1; i <= n; i++) {
        cout << "Up to index " << i << ": " << ft.sum(i) << "kg\n";
    }

    return 0;
}
